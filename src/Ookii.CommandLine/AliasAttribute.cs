// Copyright (c) Sven Groot (Ookii.org)
using System;

namespace Ookii.CommandLine
{
    /// <summary>
    /// Defines an alternative name for a command line argument or a subcommand.
    /// </summary>
    /// <remarks>
    /// <note>
    ///   To specify multiple aliases, apply this attribute multiple times.
    /// </note>
    /// <para>
    ///   The aliases for a command line argument can be used instead of their regular name to specify the parameter on the command line.
    ///   For example, this can be used to have a shorter name for an argument (e.g. "-v" as an alternative to "-Verbose").
    /// </para>
    /// <para>
    ///   All regular command line argument names and aliases used by an instance of the <see cref="CommandLineParser"/> class must be
    ///   unique.
    /// </para>
    /// <para>
    ///   By default, the command line usage help generated by <see cref="CommandLineParser.WriteUsage(System.IO.TextWriter,int,WriteUsageOptions)"/>
    ///   includes the aliases. Set the <see cref="WriteUsageOptions.IncludeAliasInDescription"/>
    ///   property to <see langword="false"/> to exclude them.
    /// </para>
    /// <note>
    ///   If the <see cref="CommandLineParser.Mode"/> property is <see cref="ParsingMode.LongShort"/>, and the argument
    ///   this is applied to does not have a long name, this attribute is ignored.
    /// </note>
    /// <para>
    ///   This attribute can also be applied to classes that implement the <see cref="Commands.ICommand"/>
    ///   interface to specify an alias for that command. In that case, inclusion of the aliases in
    ///   the command list usage help is controlled by the <see cref="Commands.CommandOptions.IncludeCommandAliasInCommandList"/>
    ///   property.
    /// </para>
    /// </remarks>
    [AttributeUsage(AttributeTargets.Property | AttributeTargets.Parameter | AttributeTargets.Class, AllowMultiple = true)]
    public sealed class AliasAttribute : Attribute
    {
        private readonly string _alias;

        /// <summary>
        /// Initializes a new instance of the <see cref="AliasAttribute"/> class.
        /// </summary>
        /// <param name="alias">The alternative name for the command line argument or subcommand.</param>
        public AliasAttribute(string alias)
        {
            _alias = alias ?? throw new ArgumentNullException(nameof(alias));
        }

        /// <summary>
        /// Gets the alternative name for the command line argument or subcommand.
        /// </summary>
        /// <value>
        /// The alternative name.
        /// </value>
        public string Alias
        {
            get { return _alias; }
        }
    }
}
